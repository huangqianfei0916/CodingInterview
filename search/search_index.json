{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"CodingInterviews/JZ03-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/","title":"JZ03 \u200b\u6570\u7ec4\u200b\u4e2d\u200b\u91cd\u590d\u200b\u7684\u200b\u6570\u5b57","text":"<p>\u200b\u627e\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u91cd\u590d\u200b\u7684\u200b\u6570\u5b57\u200b\u3002</p> <p>\u200b\u5728\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b n \u200b\u7684\u200b\u6570\u7ec4\u200b nums \u200b\u91cc\u200b\u7684\u200b\u6240\u6709\u200b\u6570\u5b57\u200b\u90fd\u200b\u5728\u200b 0\uff5en-1 \u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\u3002\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u67d0\u4e9b\u200b\u6570\u5b57\u200b\u662f\u200b\u91cd\u590d\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u77e5\u9053\u200b\u6709\u200b\u51e0\u4e2a\u200b\u6570\u5b57\u200b\u91cd\u590d\u200b\u4e86\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u200b\u77e5\u9053\u200b\u6bcf\u4e2a\u200b\u6570\u5b57\u200b\u91cd\u590d\u200b\u4e86\u200b\u51e0\u6b21\u200b\u3002\u200b\u8bf7\u200b\u627e\u51fa\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u91cd\u590d\u200b\u7684\u200b\u6570\u5b57\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a [2, 3, 1, 0, 2, 5, 3] \u200b\u8f93\u51fa\u200b\uff1a2 \u200b\u6216\u200b 3 </p> <p>\u200b\u9650\u5236\u200b\uff1a</p> <p>2 &lt;= n &lt;= 100000</p> <p>\u200b\u89e3\u6cd5\u200b\u4e00\u200b\uff1a\u200b\u901a\u8fc7\u200bset\u200b\u8f85\u52a9\u200b\u5b9e\u73b0\u200b * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1ao(N) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1ao(N)</p> <p><pre><code>int findRepeatNumber(vector&lt;int&gt;&amp; nums) {\n    set&lt;int&gt; nums_set;\n\n    for (int i = 0; i &lt; nums.size(); ++i) {\n        if (nums_set.find(nums[i]) == nums_set.end()) {\n            nums_set.insert(nums[i]);\n        } else {\n            return nums[i];\n        }\n    }\n\n    return -1;\n}\n</code></pre> \u200b\u89e3\u6cd5\u200b\u4e8c\u200b\uff1a\u200b\u539f\u5730\u200bhash * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1ao(N) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1ao(1) <pre><code>int findRepeatNumber(vector&lt;int&gt;&amp; nums) {\n\n\n    for (int i = 0; i &lt; nums.size(); ++i) {\n        while (nums[i] != nums[nums[i]]) {\n            swap(nums[i], nums[nums[i]]);\n        }\n    }\n    for (int i = 0; i &lt; nums.size(); ++i) {\n        if (i != nums[i]) {\n            return nums[i];\n        }\n    }\n\n    return -1;\n}\n</code></pre></p>"},{"location":"CodingInterviews/JZ04-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE/","title":"JZ04 \u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u67e5\u627e","text":"<p>\u200b\u5728\u200b\u4e00\u4e2a\u200b n * m \u200b\u7684\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u884c\u200b\u90fd\u200b\u6309\u7167\u200b\u4ece\u5de6\u5230\u53f3\u200b \u200b\u975e\u200b\u9012\u51cf\u200b \u200b\u7684\u200b\u987a\u5e8f\u200b\u6392\u5e8f\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u5217\u200b\u90fd\u200b\u6309\u7167\u200b\u4ece\u4e0a\u5230\u4e0b\u200b \u200b\u975e\u200b\u9012\u51cf\u200b \u200b\u7684\u200b\u987a\u5e8f\u200b\u6392\u5e8f\u200b\u3002\u200b\u8bf7\u200b\u5b8c\u6210\u200b\u4e00\u4e2a\u200b\u9ad8\u6548\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u8f93\u5165\u200b\u8fd9\u6837\u200b\u7684\u200b\u4e00\u4e2a\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\uff0c\u200b\u5224\u65ad\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u662f\u5426\u200b\u542b\u6709\u200b\u8be5\u200b\u6574\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b:</p> <p>\u200b\u73b0\u6709\u200b\u77e9\u9635\u200b matrix \u200b\u5982\u4e0b\u200b\uff1a</p> <p>[   [1,   4,  7, 11, 15],   [2,   5,  8, 12, 19],   [3,   6,  9, 16, 22],   [10, 13, 14, 17, 24],   [18, 21, 23, 26, 30] ] * \u200b\u7ed9\u5b9a\u200b target = 5\uff0c\u200b\u8fd4\u56de\u200b true\u3002 * \u200b\u7ed9\u5b9a\u200b target = 20\uff0c\u200b\u8fd4\u56de\u200b false\u3002</p> <ul> <li>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n+m)</li> <li>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(1)</li> </ul> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u6839\u636e\u200b\u53f3\u4e0a\u89d2\u200btarget\u200b\u8fdb\u884c\u200b\u641c\u7d22\u200b <pre><code>bool findNumberIn2DArray(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n    if (matrix.size() == 0) {\n        return false;\n    }\n    int row = 0;\n    int col = matrix[0].size() - 1;\n    int rows = matrix.size();\n\n    while (row &lt; rows &amp;&amp; col &gt;= 0) {\n        if (target == matrix[row][col]) {\n            return true;\n        }\n        if (target &gt; matrix[row][col]) {\n            ++row;\n        } else {\n            --col;\n        }\n    }\n    return false;\n}\n</code></pre></p>"},{"location":"CodingInterviews/JZ05-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC/","title":"JZ05 \u200b\u66ff\u6362\u200b\u7a7a\u683c","text":"<p>\u200b\u8bf7\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u628a\u200b\u5b57\u7b26\u4e32\u200b s \u200b\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u7a7a\u683c\u200b\u66ff\u6362\u6210\u200b\"%20\"\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1as = \"We are happy.\" \u200b\u8f93\u51fa\u200b\uff1a\"We%20are%20happy.\" \u200b\u89e3\u6cd5\u200b\u4e00\u200b * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n)</p> <pre><code>string replaceSpace(string s) {\n    string res = \"\";\n    for (auto item : s) {\n        if (item == ' ') {\n            res += \"%20\";\n        } else {\n            res += item;\n        }\n    }\n    return res;\n}\n</code></pre> <p>\u200b\u89e3\u6cd5\u200b\u4e8c\u200b * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(1)</p> <pre><code>string replaceSpace(string s) {\n    int count = 0, len = s.size();\n    for (auto c : s) {\n        if (c == ' ') count++;\n    }\n    s.resize(len + 2 * count);\n    // \u200b\u5012\u5e8f\u200b\u904d\u5386\u200b\u4fee\u6539\u200b\n    for(int i = len - 1, j = s.size() - 1; i &gt;= 0; i--, j--) {\n        if (s[i] != ' ')\n            s[j] = s[i];\n        else {\n            s[j - 2] = '%';\n            s[j - 1] = '2';\n            s[j] = '0';\n            j -= 2;\n        }\n    }\n    return s;\n}\n</code></pre>"},{"location":"CodingInterviews/JZ06-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8/","title":"JZ06 \u200b\u4ece\u5c3e\u200b\u5230\u5934\u200b\u6253\u5370\u200b\u94fe\u8868","text":"<p>\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\uff0c\u200b\u4ece\u5c3e\u200b\u5230\u5934\u200b\u53cd\u8fc7\u6765\u200b\u8fd4\u56de\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b\uff08\u200b\u7528\u200b\u6570\u7ec4\u200b\u8fd4\u56de\u200b\uff09\u3002 \u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1ahead = [1,3,2] \u200b\u8f93\u51fa\u200b\uff1a[2,3,1] \u200b\u89e3\u6cd5\u200b\uff1a\u200b\u53cd\u8f6c\u200b\u94fe\u8868\u200b\uff0c\u200b\u6216\u8005\u200b\u7528\u6808\u200b\u8f85\u52a9\u200b <pre><code>vector&lt;int&gt; reversePrint(ListNode* head) {\n    ListNode* p = head;\n    ListNode* q = head;\n    head = NULL;\n    vector&lt;int&gt; res;\n    while (p) {\n        q = p;\n        p = p-&gt;next;\n        q-&gt;next = head;\n        head = q;\n    }\n    while (head) {            \n        res.push_back(head-&gt;val);\n        head = head-&gt;next;\n    }\n    return res;\n}\n</code></pre></p>"},{"location":"CodingInterviews/JZ07-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"JZ07 \u200b\u91cd\u5efa\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u8f93\u5165\u200b\u67d0\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u524d\u5e8f\u200b\u904d\u5386\u200b\u548c\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u8bf7\u200b\u6784\u5efa\u200b\u8be5\u200b\u4e8c\u53c9\u6811\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5176\u6839\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u5047\u8bbe\u200b\u8f93\u5165\u200b\u7684\u200b\u524d\u5e8f\u200b\u904d\u5386\u200b\u548c\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u7684\u200b\u7ed3\u679c\u200b\u4e2d\u200b\u90fd\u200b\u4e0d\u200b\u542b\u200b\u91cd\u590d\u200b\u7684\u200b\u6570\u5b57\u200b\u3002</p> <p></p> <p>Input: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7] Output: [3,9,20,null,null,15,7]</p> <ul> <li>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n)</li> <li>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n) <pre><code>vector&lt;int&gt; make_order(int start, int end, vector&lt;int&gt;&amp; arr) {\n    vector&lt;int&gt; temp;\n    for (int i = start; i &lt; end; ++i) {\n        temp.push_back(arr[i]);\n    }\n    return temp;\n}\nTreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {\n    if (preorder.size() == 0 || inorder.size() == 0) {\n        return nullptr;\n    }\n\n    int root_value = preorder[0];\n    int index = 0;\n    for (index = 0; index &lt; inorder.size(); ++index) {\n        if (root_value == inorder[index]) {\n            break;\n        }\n    }\n\n    TreeNode* root = new TreeNode(root_value);\n    vector&lt;int&gt; pre_left = make_order(1, index + 1, preorder);\n    vector&lt;int&gt; inorder_left = make_order(0, index, inorder);\n    root-&gt;left = buildTree(pre_left, inorder_left);\n    vector&lt;int&gt; pre_right = make_order(index + 1, preorder.size(), preorder);\n    vector&lt;int&gt; inorder_right = make_order(index + 1, inorder.size(), inorder);\n    root-&gt;right = buildTree(pre_right, inorder_right);\n\n    return root;\n}\n</code></pre></li> </ul>"},{"location":"CodingInterviews/JZ09-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/","title":"JZ09 \u200b\u7528\u200b\u4e24\u4e2a\u200b\u6808\u200b\u5b9e\u73b0\u200b\u961f\u5217","text":"<p>\u200b\u7528\u200b\u4e24\u4e2a\u200b\u6808\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u961f\u5217\u200b\u3002\u200b\u961f\u5217\u200b\u7684\u200b\u58f0\u660e\u200b\u5982\u4e0b\u200b\uff0c\u200b\u8bf7\u200b\u5b9e\u73b0\u200b\u5b83\u200b\u7684\u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b appendTail \u200b\u548c\u200b deleteHead \uff0c\u200b\u5206\u522b\u200b\u5b8c\u6210\u200b\u5728\u200b\u961f\u5217\u200b\u5c3e\u90e8\u200b\u63d2\u5165\u200b\u6574\u6570\u200b\u548c\u200b\u5728\u200b\u961f\u5217\u200b\u5934\u90e8\u200b\u5220\u9664\u200b\u6574\u6570\u200b\u7684\u200b\u529f\u80fd\u200b\u3002(\u200b\u82e5\u200b\u961f\u5217\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u5143\u7d20\u200b\uff0cdeleteHead \u200b\u64cd\u4f5c\u200b\u8fd4\u56de\u200b -1 )</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a [\"CQueue\",\"appendTail\",\"deleteHead\",\"deleteHead\",\"deleteHead\"] [[],[3],[],[],[]] \u200b\u8f93\u51fa\u200b\uff1a[null,null,3,-1,-1]</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a <pre><code>class CQueue {\npublic:\n    stack&lt;int&gt; s1;\n    stack&lt;int&gt; s2;\n    CQueue() {}\n\n    void appendTail(int value) {\n        s1.push(value);\n    }\n\n    int deleteHead() {\n        if (s2.size() == 0) {\n            while (s1.size() != 0) {\n                int temp = s1.top();\n                s1.pop();\n                s2.push(temp);\n            }\n        }\n        int data = -1;\n\n        if (s2.size() != 0) {\n            data = s2.top();\n            s2.pop();\n        }\n        return data;\n\n    }\n};\n\n/**\n * Your CQueue object will be instantiated and called as such:\n * CQueue* obj = new CQueue();\n * obj-&gt;appendTail(value);\n * int param_2 = obj-&gt;deleteHead();\n */\n</code></pre></p>"},{"location":"CodingInterviews/JZ10-1-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/","title":"JZ10 1 \u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u6570\u5217","text":"<p>\u200b\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u8f93\u5165\u200b n \uff0c\u200b\u6c42\u6590\u6ce2\u200b\u90a3\u5951\u200b\uff08Fibonacci\uff09\u200b\u6570\u5217\u200b\u7684\u200b\u7b2c\u200b n \u200b\u9879\u200b\uff08\u200b\u5373\u200b F(N)\uff09\u3002\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u6570\u5217\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <p>F(0) = 0,   F(1) = 1 F(N) = F(N - 1) + F(N - 2), \u200b\u5176\u4e2d\u200b N &gt; 1. \u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u6570\u5217\u200b\u7531\u200b 0 \u200b\u548c\u200b 1 \u200b\u5f00\u59cb\u200b\uff0c\u200b\u4e4b\u540e\u200b\u7684\u200b\u6590\u6ce2\u200b\u90a3\u200b\u5951\u6570\u200b\u5c31\u662f\u200b\u7531\u200b\u4e4b\u524d\u200b\u7684\u200b\u4e24\u6570\u200b\u76f8\u52a0\u200b\u800c\u200b\u5f97\u51fa\u200b\u3002</p> <p>\u200b\u7b54\u6848\u200b\u9700\u8981\u200b\u53d6\u6a21\u200b 1e9+7\uff081000000007\uff09\uff0c\u200b\u5982\u200b\u8ba1\u7b97\u200b\u521d\u59cb\u200b\u7ed3\u679c\u200b\u4e3a\u200b\uff1a1000000008\uff0c\u200b\u8bf7\u200b\u8fd4\u56de\u200b 1\u3002</p> <ul> <li>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n)</li> <li>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(1) <pre><code>class Solution {\npublic:\n    int fib(int n) {\n        if (n &lt; 2) {\n            return n;\n        }\n        int a = 0;\n        int b = 1;\n        int fibn = 0;\n        for (int i = 2; i &lt;= n; ++i) {\n            fibn = (a + b) % 1000000007;\n            a = b;\n            b = fibn;\n\n        }\n        return fibn;\n    }\n};\n</code></pre></li> </ul>"},{"location":"CodingInterviews/JZ10-2-%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98/","title":"JZ10 2 \u200b\u9752\u86d9\u200b\u8df3\u200b\u53f0\u9636\u200b\u95ee\u9898","text":"<p>\u200b\u4e00\u53ea\u200b\u9752\u86d9\u200b\u4e00\u6b21\u200b\u53ef\u4ee5\u200b\u8df3\u4e0a\u200b1\u200b\u7ea7\u200b\u53f0\u9636\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u8df3\u4e0a\u200b2\u200b\u7ea7\u200b\u53f0\u9636\u200b\u3002\u200b\u6c42\u8be5\u200b\u9752\u86d9\u200b\u8df3\u4e0a\u200b\u4e00\u4e2a\u200b n \u200b\u7ea7\u200b\u7684\u200b\u53f0\u9636\u200b\u603b\u5171\u200b\u6709\u200b\u591a\u5c11\u200b\u79cd\u200b\u8df3\u6cd5\u200b\u3002</p> <p>\u200b\u7b54\u6848\u200b\u9700\u8981\u200b\u53d6\u6a21\u200b 1e9+7\uff081000000007\uff09\uff0c\u200b\u5982\u200b\u8ba1\u7b97\u200b\u521d\u59cb\u200b\u7ed3\u679c\u200b\u4e3a\u200b\uff1a1000000008\uff0c\u200b\u8bf7\u200b\u8fd4\u56de\u200b 1\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1an = 2 \u200b\u8f93\u51fa\u200b\uff1a2 \u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1an = 7 \u200b\u8f93\u51fa\u200b\uff1a21 \u200b\u793a\u4f8b\u200b 3\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1an = 0 \u200b\u8f93\u51fa\u200b\uff1a1</p> <ul> <li>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(n)</li> <li>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(1)</li> </ul> <pre><code>class Solution {\npublic:\n    int numWays(int n) {\n\n        if (n &lt;= 1) {\n            return 1;\n        }\n        int fibn = 2;\n        int a = 1;\n        int b = 1;\n        for (int i = 2; i &lt;= n; ++i) {\n            fibn = (a + b) % 1000000007;\n            a = b;\n            b = fibn;\n        }\n        return fibn;\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ11-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97/","title":"JZ11 \u200b\u65cb\u8f6c\u200b\u6570\u7ec4\u200b\u7684\u200b\u6700\u5c0f\u200b\u6570\u5b57","text":"<p>\u200b\u628a\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u6700\u200b\u5f00\u59cb\u200b\u7684\u200b\u82e5\u5e72\u4e2a\u200b\u5143\u7d20\u200b\u642c\u200b\u5230\u200b\u6570\u7ec4\u200b\u7684\u200b\u672b\u5c3e\u200b\uff0c\u200b\u6211\u4eec\u200b\u79f0\u4e4b\u4e3a\u200b\u6570\u7ec4\u200b\u7684\u200b\u65cb\u8f6c\u200b\u3002</p> <p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u200b\u5b58\u5728\u200b \u200b\u91cd\u590d\u200b \u200b\u5143\u7d20\u200b\u503c\u200b\u7684\u200b\u6570\u7ec4\u200b numbers \uff0c\u200b\u5b83\u200b\u539f\u6765\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5347\u5e8f\u200b\u6392\u5217\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5e76\u200b\u6309\u200b\u4e0a\u8ff0\u200b\u60c5\u5f62\u200b\u8fdb\u884c\u200b\u4e86\u200b\u4e00\u6b21\u200b\u65cb\u8f6c\u200b\u3002\u200b\u8bf7\u200b\u8fd4\u56de\u200b\u65cb\u8f6c\u200b\u6570\u7ec4\u200b\u7684\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6570\u7ec4\u200b [3,4,5,1,2] \u200b\u4e3a\u200b [1,2,3,4,5] \u200b\u7684\u200b\u4e00\u6b21\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u8be5\u200b\u6570\u7ec4\u200b\u7684\u200b\u6700\u5c0f\u503c\u200b\u4e3a\u200b 1\u3002  </p> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u6570\u7ec4\u200b [a[0], a[1], a[2], ..., a[n-1]] \u200b\u65cb\u8f6c\u200b\u4e00\u6b21\u200b \u200b\u7684\u200b\u7ed3\u679c\u200b\u4e3a\u200b\u6570\u7ec4\u200b [a[n-1], a[0], a[1], a[2], ..., a[n-2]] \u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anumbers = [3,4,5,1,2] \u200b\u8f93\u51fa\u200b\uff1a1 \u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anumbers = [2,2,2,0,1] \u200b\u8f93\u51fa\u200b\uff1a0</p> <p>\u200b\u89e3\u6cd5\u200b\u4e00\u200b\uff1a \u200b\u82e5\u200b\u662f\u200bmid \u200b\u6bd4\u200br \u200b\u5927\u200b \u200b\u8bc1\u660e\u200b mid\u200b\u5728\u200b\u5de6\u8fb9\u200b\uff0c \u200b\u6b64\u65f6\u200bmid\u200b\u4e00\u5b9a\u200b\u4e0d\u662f\u200b\u6700\u5c0f\u200b\uff0c \u200b\u56e0\u6b64\u200b\uff0c l = mid + 1 \u200b\u82e5\u200b\u662f\u200bmid \u200b\u6bd4\u200br \u200b\u5c0f\u200b \u200b\u8bc1\u660e\u200b mid\u200b\u5728\u200b\u53f3\u4fa7\u200b\uff0c \u200b\u6b64\u65f6\u200b\u4e0d\u200b\u786e\u5b9a\u200bmid \u200b\u662f\u4e0d\u662f\u200b\u6700\u5c0f\u200b\u3010mid\u200b\u53ef\u80fd\u200b\u6700\u5c0f\u200b\u3011\uff0c\u200b\u56e0\u6b64\u200b\uff0c r = mid</p> <ul> <li>\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(logn)</li> <li>\u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200b\uff1aO(1) <pre><code>class Solution {\npublic:\n    int minArray(vector&lt;int&gt;&amp; numbers) {\n\n        int l = 0;\n        int r = numbers.size() - 1;\n\n        while (l &lt;= r) {\n            int mid = l + (r - l) / 2;\n            if (l == r) {\n                return numbers[l];\n            }\n\n            if (numbers[mid] &gt; numbers[r]) {\n                l = mid + 1;\n            } else if(numbers[mid] &lt; numbers[r]) {\n                r = mid;\n            } else {\n                // \u200b\u5b58\u5728\u200b\u91cd\u590d\u200b\u65f6\u5019\u200b,case: \u30103313\u3011 mid=3, r = 3\uff0c\u200b\u6b64\u65f6\u200b\u4e0d\u80fd\u200b r = mid, \u200b\u4f1a\u200b\u9519\u8fc7\u200b\u6700\u5c0f\u503c\u200b\n                --r;\n            }\n        }\n        return -1;\n    }\n};\n</code></pre></li> </ul>"},{"location":"CodingInterviews/JZ12-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84/","title":"JZ12 \u200b\u77e9\u9635\u200b\u4e2d\u200b\u7684\u200b\u8def\u5f84","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b m x n \u200b\u4e8c\u7ef4\u200b\u5b57\u7b26\u200b\u7f51\u683c\u200b board \u200b\u548c\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\u5355\u8bcd\u200b word \u3002\u200b\u5982\u679c\u200b word \u200b\u5b58\u5728\u200b\u4e8e\u200b\u7f51\u683c\u200b\u4e2d\u200b\uff0c\u200b\u8fd4\u56de\u200b true \uff1b\u200b\u5426\u5219\u200b\uff0c\u200b\u8fd4\u56de\u200b false \u3002</p> <p>\u200b\u5355\u8bcd\u200b\u5fc5\u987b\u200b\u6309\u7167\u200b\u5b57\u6bcd\u200b\u987a\u5e8f\u200b\uff0c\u200b\u901a\u8fc7\u200b\u76f8\u90bb\u200b\u7684\u200b\u5355\u5143\u683c\u200b\u5185\u200b\u7684\u200b\u5b57\u6bcd\u200b\u6784\u6210\u200b\uff0c\u200b\u5176\u4e2d\u200b\u201c\u200b\u76f8\u90bb\u200b\u201d\u200b\u5355\u5143\u683c\u200b\u662f\u200b\u90a3\u4e9b\u200b\u6c34\u5e73\u200b\u76f8\u90bb\u200b\u6216\u200b\u5782\u76f4\u200b\u76f8\u90bb\u200b\u7684\u200b\u5355\u5143\u683c\u200b\u3002\u200b\u540c\u4e00\u4e2a\u200b\u5355\u5143\u683c\u200b\u5185\u200b\u7684\u200b\u5b57\u6bcd\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u88ab\u200b\u91cd\u590d\u4f7f\u7528\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200b\u4e0b\u9762\u200b\u7684\u200b 3\u00d74 \u200b\u7684\u200b\u77e9\u9635\u200b\u4e2d\u200b\u5305\u542b\u200b\u5355\u8bcd\u200b \"ABCCED\"\uff08\u200b\u5355\u8bcd\u200b\u4e2d\u200b\u7684\u200b\u5b57\u6bcd\u200b\u5df2\u200b\u6807\u51fa\u200b\uff09\u3002</p> <p></p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1aboard = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\" \u200b\u8f93\u51fa\u200b\uff1atrue \u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1aboard = [[\"a\",\"b\"],[\"c\",\"d\"]], word = \"abcd\" \u200b\u8f93\u51fa\u200b\uff1afalse</p> <p>\u200b\u89e3\u6cd5\u200b\uff1adfs <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;bool&gt;&gt; vis;\n    int index = 0;\n    bool exist(vector&lt;vector&lt;char&gt;&gt;&amp; board, string word) {\n        int row = board.size();\n        int col = board[0].size();\n        vis.resize(row);\n\n        for (int i = 0; i &lt; row; ++i) {\n            vis[i].resize(col);\n        }\n\n        bool flag = false;\n        for (int i = 0; i &lt; row; ++i) {\n            for (int j = 0; j &lt; col; ++j) {\n                if (board[i][j] == word[0]) {\n                    flag = dfs (board, i, j, word, row, col);\n                    if (flag) {\n                        return flag;\n                    }\n                }\n            }\n        }\n        return flag;\n    }\n\n    bool dfs(vector&lt;vector&lt;char&gt;&gt;&amp; board, int i, int j, string word, int row, int col) {\n        if (index == word.size()) {\n            return true;\n        }\n        if (i &lt; 0 || i &gt;= row || j &gt;= col || j &lt; 0 || board[i][j] != word[index] || vis[i][j]) {\n            return false;\n        }\n        ++index;\n        vis[i][j] = true;\n        bool flag = dfs(board, i + 1, j, word, row, col) ||\n                    dfs(board, i - 1, j, word, row, col) ||\n                    dfs(board, i, j + 1, word, row, col) ||\n                    dfs(board, i, j - 1, word, row, col);\n        if (!flag) {\n            --index;\n            vis[i][j] = false;\n        }\n\n        return flag;\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ13-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4/","title":"JZ13 \u200b\u673a\u5668\u4eba\u200b\u7684\u200b\u8fd0\u52a8\u200b\u8303\u56f4","text":"<p>\u200b\u5730\u4e0a\u200b\u6709\u200b\u4e00\u4e2a\u200bm\u200b\u884c\u200bn\u200b\u5217\u200b\u7684\u200b\u65b9\u683c\u200b\uff0c\u200b\u4ece\u200b\u5750\u6807\u200b [0,0] \u200b\u5230\u200b\u5750\u6807\u200b [m-1,n-1] \u3002\u200b\u4e00\u4e2a\u200b\u673a\u5668\u4eba\u200b\u4ece\u200b\u5750\u6807\u200b [0, 0] \u200b\u7684\u200b\u683c\u5b50\u200b\u5f00\u59cb\u200b\u79fb\u52a8\u200b\uff0c\u200b\u5b83\u200b\u6bcf\u6b21\u200b\u53ef\u4ee5\u200b\u5411\u200b\u5de6\u200b\u3001\u200b\u53f3\u200b\u3001\u200b\u4e0a\u200b\u3001\u200b\u4e0b\u200b\u79fb\u52a8\u200b\u4e00\u200b\u683c\u200b\uff08\u200b\u4e0d\u80fd\u200b\u79fb\u52a8\u200b\u5230\u65b9\u200b\u683c\u5916\u200b\uff09\uff0c\u200b\u4e5f\u200b\u4e0d\u80fd\u200b\u8fdb\u5165\u200b\u884c\u200b\u5750\u6807\u200b\u548c\u200b\u5217\u200b\u5750\u6807\u200b\u7684\u200b\u6570\u4f4d\u200b\u4e4b\u200b\u548c\u200b\u5927\u4e8e\u200bk\u200b\u7684\u200b\u683c\u5b50\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5f53\u200bk\u200b\u4e3a\u200b18\u200b\u65f6\u200b\uff0c\u200b\u673a\u5668\u4eba\u200b\u80fd\u591f\u200b\u8fdb\u5165\u200b\u65b9\u683c\u200b [35, 37] \uff0c\u200b\u56e0\u4e3a\u200b3+5+3+7=18\u3002\u200b\u4f46\u200b\u5b83\u200b\u4e0d\u80fd\u200b\u8fdb\u5165\u200b\u65b9\u683c\u200b [35, 38]\uff0c\u200b\u56e0\u4e3a\u200b3+5+3+8=19\u3002\u200b\u8bf7\u95ee\u200b\u8be5\u200b\u673a\u5668\u4eba\u200b\u80fd\u591f\u200b\u5230\u8fbe\u200b\u591a\u5c11\u200b\u4e2a\u200b\u683c\u5b50\u200b\uff1f</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1am = 2, n = 3, k = 1 \u200b\u8f93\u51fa\u200b\uff1a3 \u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1am = 3, n = 1, k = 0 \u200b\u8f93\u51fa\u200b\uff1a1</p> <p>\u200b\u89e3\u6cd5\u200b\uff1adfs\uff0c\u200b\u548c\u200b12\u200b\u9898\u200b\u7684\u200b\u533a\u522b\u200b\u5728\u4e8e\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u8bbf\u95ee\u200b\u8fc7\u200b\u4e4b\u540e\u200b\u5c31\u662f\u200btrue\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u91ca\u653e\u200b\u4e3a\u200bfalse\u200b\u7684\u200b\u60c5\u51b5\u200b <pre><code>class Solution {\npublic:\n\n    int sum_xy(int x, int y) {\n        int sum = 0;\n        while (x) {\n            int temp = x % 10;\n            x = x / 10;\n            sum += temp;\n        }\n\n        while (y) {\n            int temp = y % 10;\n            y = y / 10;\n            sum += temp; \n        }\n        return sum;\n    }\n\n    int res = 0;\n    int movingCount(int m, int n, int k) {\n        vector&lt;vector&lt;bool&gt;&gt; vis(m, vector&lt;bool&gt;(n, false));\n        dfs(m, n, 0, 0, k, vis);\n        return res;\n\n    }\n\n    void dfs(int m, int n, int i, int j, int k, vector&lt;vector&lt;bool&gt;&gt;&amp; vis) {\n        if (i &gt;= m || i &lt; 0 || j &gt;= n || j &lt; 0 || vis[i][j]) {\n            return;\n        }\n\n        if (sum_xy(i, j) &gt; k) {\n            return;\n        }\n\n        ++res;\n        vis[i][j] = true;\n        dfs(m, n, i + 1, j, k, vis);\n        dfs(m, n, i - 1, j, k, vis);\n        dfs(m, n, i, j + 1, k, vis);\n        dfs(m, n, i, j - 1, k, vis);\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ14-%E5%89%AA%E7%BB%B3%E5%AD%90/","title":"JZ14 \u200b\u526a\u200b\u7ef3\u5b50","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u6839\u200b\u957f\u5ea6\u200b\u4e3a\u200b n \u200b\u7684\u200b\u7ef3\u5b50\u200b\uff0c\u200b\u8bf7\u200b\u628a\u200b\u7ef3\u5b50\u200b\u526a\u6210\u200b\u6574\u6570\u200b\u957f\u5ea6\u200b\u7684\u200b m \u200b\u6bb5\u200b\uff08m\u3001n\u200b\u90fd\u200b\u662f\u200b\u6574\u6570\u200b\uff0cn&gt;1\u200b\u5e76\u4e14\u200bm&gt;1\uff09\uff0c\u200b\u6bcf\u200b\u6bb5\u200b\u7ef3\u5b50\u200b\u7684\u200b\u957f\u5ea6\u200b\u8bb0\u200b\u4e3a\u200b k[0],k[1]...k[m-1] \u3002\u200b\u8bf7\u95ee\u200b k[0]k[1]...*k[m-1] \u200b\u53ef\u80fd\u200b\u7684\u200b\u6700\u5927\u200b\u4e58\u79ef\u200b\u662f\u200b\u591a\u5c11\u200b\uff1f\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5f53\u200b\u7ef3\u5b50\u200b\u7684\u200b\u957f\u5ea6\u200b\u662f\u200b8\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u628a\u200b\u5b83\u200b\u526a\u6210\u200b\u957f\u5ea6\u200b\u5206\u522b\u200b\u4e3a\u200b2\u30013\u30013\u200b\u7684\u200b\u4e09\u6bb5\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5f97\u5230\u200b\u7684\u200b\u6700\u5927\u200b\u4e58\u79ef\u200b\u662f\u200b18\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b: 2 \u200b\u8f93\u51fa\u200b: 1 \u200b\u89e3\u91ca\u200b: 2 = 1 + 1, 1 \u00d7 1 = 1 \u200b\u793a\u4f8b\u200b 2:</p> <p>\u200b\u8f93\u5165\u200b: 10 \u200b\u8f93\u51fa\u200b: 36 \u200b\u89e3\u91ca\u200b: 10 = 3 + 3 + 4, 3 \u00d7 3 \u00d7 4 = 36</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u5c3d\u53ef\u80fd\u200b\u7684\u200b\u5212\u5206\u200b\u51fa\u200b \u200b\u591a\u200b\u7684\u200b3 \u200b\u548c\u200b 2,\u200b\u8fd9\u6837\u200b\u5f97\u5230\u200b\u7684\u200b\u4e58\u79ef\u200b\u6700\u5927\u200b  \u200b\u5f53\u200bn\u200b\u5f88\u5927\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8981\u200b\u91c7\u7528\u200b\u5feb\u901f\u200b\u5e42\u200b\u7b97\u6cd5\u200b</p> <pre><code>class Solution {\npublic:\n    long quick_pow(int x, int n) {\n        long res = 1;\n        long temp = x;\n\n        while (n != 0) {\n            if (n % 2 == 0) {\n                temp = temp * temp;\n                temp = temp % 1000000007;\n                n = n / 2;\n\n            } else {\n                res = res * temp;\n                res = res % 1000000007;\n                --n;\n            }\n        }\n        return res;\n    }\n\n    int cuttingRope(int n) {\n        if (n == 2) {\n            return 1;\n        }\n        if (n == 3) {\n            return 2;\n        }\n\n        int flag1 = n % 3;\n        int flag2 = n / 3;\n\n        if (flag1 == 0) {\n            return quick_pow(3, flag2) % 1000000007;\n        } else if (flag1 == 1) {\n            return quick_pow(3, flag2 - 1) * 2 * 2 % 1000000007;\n        } else {\n            return quick_pow(3, flag2) * 2 % 1000000007;\n        }\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ15-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/","title":"JZ15 \u200b\u4e8c\u8fdb\u5236\u200b\u4e2d\u200b1\u200b\u7684\u200b\u4e2a\u6570","text":"<p>\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u8f93\u5165\u200b\u662f\u200b\u4e00\u4e2a\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\uff08\u200b\u4ee5\u200b\u4e8c\u8fdb\u5236\u200b\u4e32\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff09\uff0c\u200b\u8fd4\u56de\u200b\u5176\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u6570\u5b57\u200b\u4f4d\u6570\u200b\u4e3a\u200b '1' \u200b\u7684\u200b\u4e2a\u6570\u200b\uff08\u200b\u4e5f\u200b\u88ab\u200b\u79f0\u4e3a\u200b \u200b\u6c49\u660e\u200b\u91cd\u91cf\u200b).\uff09\u3002</p> <p>\u200b\u63d0\u793a\u200b\uff1a \u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5728\u200b\u67d0\u4e9b\u200b\u8bed\u8a00\u200b\uff08\u200b\u5982\u200b Java\uff09\u200b\u4e2d\u200b\uff0c\u200b\u6ca1\u6709\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u3002\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u90fd\u200b\u5c06\u200b\u88ab\u200b\u6307\u5b9a\u200b\u4e3a\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u200b\u5e94\u200b\u5f71\u54cd\u200b\u60a8\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u65e0\u8bba\u200b\u6574\u6570\u200b\u662f\u200b\u6709\u200b\u7b26\u53f7\u200b\u7684\u200b\u8fd8\u662f\u200b\u65e0\u200b\u7b26\u53f7\u200b\u7684\u200b\uff0c\u200b\u5176\u200b\u5185\u90e8\u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u8868\u793a\u200b\u5f62\u5f0f\u200b\u90fd\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u3002 \u200b\u5728\u200b Java \u200b\u4e2d\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u4f7f\u7528\u200b \u200b\u4e8c\u8fdb\u5236\u200b\u8865\u7801\u200b \u200b\u8bb0\u6cd5\u200b\u6765\u200b\u8868\u793a\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5728\u200b\u4e0a\u9762\u200b\u7684\u200b \u200b\u793a\u4f8b\u200b 3 \u200b\u4e2d\u200b\uff0c\u200b\u8f93\u5165\u200b\u8868\u793a\u200b\u6709\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b -3\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1an = 11 (\u200b\u63a7\u5236\u53f0\u200b\u8f93\u5165\u200b 00000000000000000000000000001011) \u200b\u8f93\u51fa\u200b\uff1a3 \u200b\u89e3\u91ca\u200b\uff1a\u200b\u8f93\u5165\u200b\u7684\u200b\u4e8c\u8fdb\u5236\u200b\u4e32\u200b 00000000000000000000000000001011 \u200b\u4e2d\u200b\uff0c\u200b\u5171\u6709\u200b\u4e09\u4f4d\u200b\u4e3a\u200b '1'\u3002</p> <p>\u200b\u89e3\u6cd5\u200b\uff1an = n &amp; (n - 1) : \u200b\u662f\u200b\u8ba9\u200bn\u200b\u7684\u200b\u6700\u200b\u53f3\u8fb9\u200b\u7684\u200b1\u200b\u53d8\u6210\u200b0\uff0c\u200b\u6bcf\u6b21\u200b\u5c06\u200b\u6700\u200b\u53f3\u8fb9\u200b\u7684\u200b1\u200b\u53d8\u6210\u200b0\uff0c\u200b\u76f4\u5230\u200bn\u200b\u53d8\u6210\u200b0\uff0c\u200b\u5373\u53ef\u200b\u6c42\u51fa\u200b\u6709\u200b\u591a\u5c11\u200b\u4e2a\u200b1 * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(logn) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1)</p> <pre><code>class Solution {\npublic:\n    int hammingWeight(uint32_t n) {\n\n        int count = 0;\n\n        while (n != 0) {\n            n = n &amp; (n - 1);\n            ++count;\n        }\n        return count;\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ16-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9/","title":"JZ16 \u200b\u6570\u503c\u200b\u7684\u200b\u6574\u6570\u200b\u6b21\u65b9","text":"<p>\u200b\u5b9e\u73b0\u200b pow(x, n) \uff0c\u200b\u5373\u200b\u8ba1\u7b97\u200b x \u200b\u7684\u200b n \u200b\u6b21\u200b\u5e42\u51fd\u6570\u200b\uff08\u200b\u5373\u200b\uff0cxn\uff09\u3002\u200b\u4e0d\u5f97\u200b\u4f7f\u7528\u200b\u5e93\u51fd\u6570\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e0d\u200b\u9700\u8981\u200b\u8003\u8651\u200b\u5927\u6570\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1ax = 2.00000, n = 10 \u200b\u8f93\u51fa\u200b\uff1a1024.00000</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u5feb\u901f\u200b\u5e42\u200b * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(logn) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1)</p> <pre><code>class Solution {\npublic:\n    double myPow(double x, int n) {\n\n        double res = 1;\n        double temp = x;\n\n        long abs_n = abs(n);\n        while (abs_n != 0) {\n            if (abs_n % 2 == 0) {\n                temp = temp * temp;\n                abs_n = abs_n / 2;\n            } else {\n                res = res * temp;\n                --abs_n;\n            }\n        }\n\n        if (n &lt; 0) {\n            res = 1 / res;\n        }\n        return res;\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ17-%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0/","title":"JZ17 \u200b\u6253\u5370\u200b\u4ece\u200b1\u200b\u5230\u200b\u6700\u5927\u200b\u7684\u200bn\u200b\u4f4d\u6570","text":"<p>\u200b\u8f93\u5165\u200b\u6570\u5b57\u200b n\uff0c\u200b\u6309\u200b\u987a\u5e8f\u200b\u6253\u5370\u200b\u51fa\u200b\u4ece\u200b 1 \u200b\u5230\u200b\u6700\u5927\u200b\u7684\u200b n \u200b\u4f4d\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\u3002\u200b\u6bd4\u5982\u200b\u8f93\u5165\u200b 3\uff0c\u200b\u5219\u200b\u6253\u5370\u200b\u51fa\u200b 1\u30012\u30013 \u200b\u4e00\u76f4\u200b\u5230\u200b\u6700\u5927\u200b\u7684\u200b 3 \u200b\u4f4d\u6570\u200b 999\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <p>\u200b\u8f93\u5165\u200b: n = 1 \u200b\u8f93\u51fa\u200b: [1,2,3,4,5,6,7,8,9]</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a \u200b\u5168\u200b\u6392\u5217\u200b\uff0c\u200b\u6570\u7ec4\u200b\u662f\u200b\u30100-9\u3011\u200b\u65e0\u200b\u91cd\u590d\u200b\uff0c\u200b\u5143\u7d20\u200b\u53ef\u4ee5\u200b\u91cd\u590d\u4f7f\u7528\u200b</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; res;\n    vector&lt;int&gt; vec;\n    vector&lt;int&gt; printNumbers(int n) {\n\n        for (int i = 1; i &lt;= n; ++i) {\n            dfs(i);\n        }\n        return res;\n\n    }\n    void dfs(int len) {\n        if (len == vec.size()) {\n            int sum = 0;\n            int n = len;\n            for (auto&amp; item : vec) {\n                sum += item * pow(10, (n - 1));\n                --n;\n            }\n\n            res.push_back(sum);\n            return;\n        }\n\n        for (int i = 0; i &lt;= 9; ++i) {\n            if (vec.size() == 0 &amp;&amp; i == 0) {\n                continue;\n            }\n            vec.push_back(i);\n            dfs(len);\n            vec.pop_back();\n        }\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ18-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E8%8A%82%E7%82%B9/","title":"JZ18 \u200b\u5220\u9664\u200b\u94fe\u8868\u200b\u7684\u200b\u8282\u70b9","text":"<p>\u200b\u7ed9\u5b9a\u200b\u5355\u5411\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u6307\u9488\u200b\u548c\u200b\u4e00\u4e2a\u200b\u8981\u200b\u5220\u9664\u200b\u7684\u200b\u8282\u70b9\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u5220\u9664\u200b\u8be5\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u8fd4\u56de\u200b\u5220\u9664\u200b\u540e\u200b\u7684\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u6b64\u9898\u200b\u5bf9\u6bd4\u200b\u539f\u9898\u200b\u6709\u200b\u6539\u52a8\u200b</p> <p>\u200b\u793a\u4f8b\u200b 1:</p> <p>\u200b\u8f93\u5165\u200b: head = [4,5,1,9], val = 5 \u200b\u8f93\u51fa\u200b: [4,1,9] \u200b\u89e3\u91ca\u200b: \u200b\u7ed9\u5b9a\u200b\u4f60\u200b\u94fe\u8868\u200b\u4e2d\u503c\u200b\u4e3a\u200b 5 \u200b\u7684\u200b\u7b2c\u4e8c\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5728\u200b\u8c03\u7528\u200b\u4e86\u200b\u4f60\u200b\u7684\u200b\u51fd\u6570\u200b\u4e4b\u540e\u200b\uff0c\u200b\u8be5\u200b\u94fe\u8868\u200b\u5e94\u53d8\u200b\u4e3a\u200b 4 -&gt; 1 -&gt; 9.</p> <p>\u200b\u89e3\u6cd5\u200b: * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(n) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1) <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteNode(ListNode* head, int val) {\n\n        ListNode* real_head = new ListNode(0);\n        real_head-&gt;next = head;\n\n        ListNode* p = head;\n        ListNode* pre = real_head;\n\n        while (p) {\n            if (p-&gt;val == val) {\n                pre-&gt;next = p-&gt;next;\n            }\n            p = p-&gt;next;\n            pre = pre-&gt;next;\n        }\n        return real_head-&gt;next;\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ20-%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"JZ20 \u200b\u8868\u793a\u200b\u6570\u503c\u200b\u7684\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u8bf7\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7528\u6765\u200b\u5224\u65ad\u200b\u5b57\u7b26\u4e32\u200b\u662f\u5426\u200b\u8868\u793a\u200b\u6570\u503c\u200b\uff08\u200b\u5305\u62ec\u200b\u6574\u6570\u200b\u548c\u200b\u5c0f\u6570\u200b\uff09\u3002</p> <p>\u200b\u6570\u503c\u200b\uff08\u200b\u6309\u200b\u987a\u5e8f\u200b\uff09\u200b\u53ef\u4ee5\u200b\u5206\u6210\u200b\u4ee5\u4e0b\u200b\u51e0\u4e2a\u200b\u90e8\u5206\u200b\uff1a</p> <p>\u200b\u82e5\u5e72\u200b\u7a7a\u683c\u200b \u200b\u4e00\u4e2a\u200b \u200b\u5c0f\u6570\u200b \u200b\u6216\u8005\u200b \u200b\u6574\u6570\u200b \uff08\u200b\u53ef\u200b\u9009\u200b\uff09\u200b\u4e00\u4e2a\u200b 'e' \u200b\u6216\u200b 'E' \uff0c\u200b\u540e\u9762\u200b\u8ddf\u7740\u200b\u4e00\u4e2a\u200b \u200b\u6574\u6570\u200b \u200b\u82e5\u5e72\u200b\u7a7a\u683c\u200b \u200b\u5c0f\u6570\u200b\uff08\u200b\u6309\u200b\u987a\u5e8f\u200b\uff09\u200b\u53ef\u4ee5\u200b\u5206\u6210\u200b\u4ee5\u4e0b\u200b\u51e0\u4e2a\u200b\u90e8\u5206\u200b\uff1a</p> <p>\uff08\u200b\u53ef\u200b\u9009\u200b\uff09\u200b\u4e00\u4e2a\u200b\u7b26\u53f7\u200b\u5b57\u7b26\u200b\uff08'+' \u200b\u6216\u200b '-'\uff09 \u200b\u4e0b\u8ff0\u200b\u683c\u5f0f\u200b\u4e4b\u4e00\u200b\uff1a \u200b\u81f3\u5c11\u200b\u4e00\u4f4d\u200b\u6570\u5b57\u200b\uff0c\u200b\u540e\u9762\u200b\u8ddf\u7740\u200b\u4e00\u4e2a\u70b9\u200b '.' \u200b\u81f3\u5c11\u200b\u4e00\u4f4d\u200b\u6570\u5b57\u200b\uff0c\u200b\u540e\u9762\u200b\u8ddf\u7740\u200b\u4e00\u4e2a\u70b9\u200b '.' \uff0c\u200b\u540e\u9762\u200b\u518d\u200b\u8ddf\u7740\u200b\u81f3\u5c11\u200b\u4e00\u4f4d\u200b\u6570\u5b57\u200b \u200b\u4e00\u4e2a\u70b9\u200b '.' \uff0c\u200b\u540e\u9762\u200b\u8ddf\u7740\u200b\u81f3\u5c11\u200b\u4e00\u4f4d\u200b\u6570\u5b57\u200b \u200b\u6574\u6570\u200b\uff08\u200b\u6309\u200b\u987a\u5e8f\u200b\uff09\u200b\u53ef\u4ee5\u200b\u5206\u6210\u200b\u4ee5\u4e0b\u200b\u51e0\u4e2a\u200b\u90e8\u5206\u200b\uff1a</p> <p>\uff08\u200b\u53ef\u200b\u9009\u200b\uff09\u200b\u4e00\u4e2a\u200b\u7b26\u53f7\u200b\u5b57\u7b26\u200b\uff08'+' \u200b\u6216\u200b '-'\uff09 \u200b\u81f3\u5c11\u200b\u4e00\u4f4d\u200b\u6570\u5b57\u200b \u200b\u90e8\u5206\u200b\u6570\u503c\u200b\u5217\u4e3e\u5982\u4e0b\u200b\uff1a</p> <p>[\"+100\", \"5e2\", \"-123\", \"3.1416\", \"-1E-16\", \"0123\"] \u200b\u90e8\u5206\u200b\u975e\u200b\u6570\u503c\u200b\u5217\u4e3e\u5982\u4e0b\u200b\uff1a</p> <p>[\"12e\", \"1a3.14\", \"1.2.3\", \"+-5\", \"12e+5.4\"]</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1as = \"0\" \u200b\u8f93\u51fa\u200b\uff1atrue</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(n) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1)</p> <pre><code>class Solution {\npublic:\n    string&amp; trim(string&amp; s) {\n        if (s.empty()) {\n            return s;\n        }\n        s.erase(0, s.find_first_not_of(\" \\t\\r\\n\"));\n        s.erase(s.find_last_not_of(\" \\t\\r\\n\") + 1);\n        return s;\n    }\n\n    int index = 0;\n    bool is_num(string s) {\n        int start = index;\n        for (int i = start; i &lt; s.size(); ++i) {\n            if (s[i] &gt;= '0' &amp;&amp; s[i] &lt;= '9') {\n                ++index;\n                cout &lt;&lt; \"dd\" &lt;&lt; s[i] &lt;&lt; endl;\n            } else {\n                break;\n            }\n        }\n        return index &gt; start;\n    }\n\n    bool isNumber(string s) {\n        if (s.size() == 0) {\n            return false;\n        }\n        s = trim(s);\n\n        if (s[0] == '+' || s[0] == '-') {\n            ++index;\n        }\n        bool flag = is_num(s);\n        if (s[index] == '.') {\n            ++index;\n            flag = is_num(s) || flag;\n        }\n        if (s[index] == 'e' || s[index] == 'E') {\n            ++index;\n            if (s[index] == '-' || s[index] == '+') {\n                ++index;\n            }\n            flag = flag &amp;&amp; is_num(s);\n        }\n        return flag &amp;&amp; index == s.size();\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ21-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2/","title":"JZ21 \u200b\u8c03\u6574\u200b\u6570\u7ec4\u200b\u987a\u5e8f\u200b\u4f7f\u200b\u5947\u6570\u200b\u4f4d\u4e8e\u200b\u5076\u6570\u200b\u524d\u9762","text":"<p>\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u8c03\u6574\u200b\u8be5\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u6570\u5b57\u200b\u7684\u200b\u987a\u5e8f\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6240\u6709\u200b\u5947\u6570\u200b\u5728\u200b\u6570\u7ec4\u200b\u7684\u200b\u524d\u534a\u90e8\u200b\u5206\u200b\uff0c\u200b\u6240\u6709\u200b\u5076\u6570\u200b\u5728\u200b\u6570\u7ec4\u200b\u7684\u200b\u540e\u200b\u534a\u200b\u90e8\u5206\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1anums = [1,2,3,4] \u200b\u8f93\u51fa\u200b\uff1a[1,3,2,4]  \u200b\u6ce8\u200b\uff1a[3,1,2,4] \u200b\u4e5f\u200b\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\u7b54\u6848\u200b\u4e4b\u4e00\u200b\u3002</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u53cc\u200b\u6307\u9488\u200b\u4e00\u6b21\u200b\u904d\u5386\u200b * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(n) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1)</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; exchange(vector&lt;int&gt;&amp; nums) {\n\n        int len = nums.size();\n        vector&lt;int&gt; res(len);\n        int left = 0;\n        int right = len - 1;\n        for (auto&amp; item : nums) {\n            if (item % 2 != 0) {\n                res[left++] = item;\n            } else {\n                res[right--] = item;\n            }\n        }\n        return res;\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ22-%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9/","title":"JZ22 \u200b\u94fe\u8868\u200b\u4e2d\u200b\u5012\u6570\u7b2c\u200bk\u200b\u4e2a\u200b\u8282\u70b9","text":"<p>\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\uff0c\u200b\u8f93\u51fa\u200b\u8be5\u200b\u94fe\u8868\u200b\u4e2d\u200b\u5012\u6570\u7b2c\u200bk\u200b\u4e2a\u200b\u8282\u70b9\u200b\u3002\u200b\u4e3a\u4e86\u200b\u7b26\u5408\u200b\u5927\u591a\u6570\u200b\u4eba\u200b\u7684\u200b\u4e60\u60ef\u200b\uff0c\u200b\u672c\u9898\u200b\u4ece\u200b1\u200b\u5f00\u59cb\u200b\u8ba1\u6570\u200b\uff0c\u200b\u5373\u200b\u94fe\u8868\u200b\u7684\u200b\u5c3e\u200b\u8282\u70b9\u200b\u662f\u200b\u5012\u6570\u7b2c\u200b1\u200b\u4e2a\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\u6709\u200b 6 \u200b\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u4ece\u5934\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7684\u200b\u503c\u200b\u4f9d\u6b21\u200b\u662f\u200b 1\u30012\u30013\u30014\u30015\u30016\u3002\u200b\u8fd9\u4e2a\u200b\u94fe\u8868\u200b\u7684\u200b\u5012\u6570\u7b2c\u200b 3 \u200b\u4e2a\u200b\u8282\u70b9\u200b\u662f\u200b\u503c\u200b\u4e3a\u200b 4 \u200b\u7684\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b: 1-&gt;2-&gt;3-&gt;4-&gt;5, \u200b\u548c\u200b k = 2.</p> <p>\u200b\u8fd4\u56de\u200b\u94fe\u8868\u200b 4-&gt;5.</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(n) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1) <pre><code>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* getKthFromEnd(ListNode* head, int k) {\n        ListNode* p = head;\n        ListNode* q = head;\n        int len = 0;\n        while (p) {\n            p = p-&gt;next;\n            ++len;\n        }\n\n        int gap = len - k;\n        while (q &amp;&amp; gap &gt; 0) {\n            q = q-&gt;next;\n            --gap;\n        }\n        return q;\n\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ24-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/","title":"JZ24 \u200b\u53cd\u8f6c\u200b\u94fe\u8868","text":"<p>\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\uff0c\u200b\u53cd\u8f6c\u200b\u8be5\u200b\u94fe\u8868\u200b\u5e76\u200b\u8f93\u51fa\u200b\u53cd\u8f6c\u200b\u540e\u200b\u94fe\u8868\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b:</p> <p>\u200b\u8f93\u5165\u200b: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL \u200b\u8f93\u51fa\u200b: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL</p> <pre><code>class Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n\n        ListNode* p = head;\n        ListNode* q = head;\n        head = nullptr;\n\n        while (p) {\n            q = p;\n            p = p-&gt;next;\n            q-&gt;next = head;\n            head = q;\n        }\n        return head;\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ25-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8/","title":"JZ25 \u200b\u5408\u5e76\u200b\u4e24\u4e2a\u200b\u6392\u5e8f\u200b\u7684\u200b\u94fe\u8868","text":"<p>\u200b\u8f93\u5165\u200b\u4e24\u4e2a\u200b\u9012\u589e\u200b\u6392\u5e8f\u200b\u7684\u200b\u94fe\u8868\u200b\uff0c\u200b\u5408\u5e76\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u94fe\u8868\u200b\u5e76\u200b\u4f7f\u200b\u65b0\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u8282\u70b9\u200b\u4ecd\u7136\u200b\u662f\u200b\u9012\u589e\u200b\u6392\u5e8f\u200b\u7684\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1a1-&gt;2-&gt;4, 1-&gt;3-&gt;4 \u200b\u8f93\u51fa\u200b\uff1a1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(n + m) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1) <pre><code>class Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        ListNode* p = new ListNode(0);\n        ListNode* phead = p;\n\n        while (l1 != nullptr &amp;&amp; l2 != nullptr) {\n            if (l1-&gt;val &lt; l2-&gt;val) {\n                p-&gt;next = l1;\n                l1 = l1-&gt;next;\n            } else {\n                p-&gt;next = l2;\n                l2 = l2-&gt;next;\n            }\n            p = p-&gt;next;\n        }\n\n        p-&gt;next = l1 == nullptr ? l2 : l1;\n        return phead-&gt;next;\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ26-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84/","title":"JZ26 \u200b\u6811\u200b\u7684\u200b\u5b50\u7ed3\u6784","text":"<p>\u200b\u8f93\u5165\u200b\u4e24\u68f5\u200b\u4e8c\u53c9\u6811\u200bA\u200b\u548c\u200bB\uff0c\u200b\u5224\u65ad\u200bB\u200b\u662f\u4e0d\u662f\u200bA\u200b\u7684\u200b\u5b50\u7ed3\u6784\u200b\u3002(\u200b\u7ea6\u5b9a\u200b\u7a7a\u6811\u200b\u4e0d\u662f\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u6811\u200b\u7684\u200b\u5b50\u7ed3\u6784\u200b)</p> <p>B\u200b\u662f\u200bA\u200b\u7684\u200b\u5b50\u7ed3\u6784\u200b\uff0c \u200b\u5373\u200b A\u200b\u4e2d\u6709\u200b\u51fa\u73b0\u200b\u548c\u200bB\u200b\u76f8\u540c\u200b\u7684\u200b\u7ed3\u6784\u200b\u548c\u200b\u8282\u70b9\u200b\u503c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b 1\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1aA = [1,2,3], B = [3,1] \u200b\u8f93\u51fa\u200b\uff1afalse \u200b\u793a\u4f8b\u200b 2\uff1a</p> <p>\u200b\u8f93\u5165\u200b\uff1aA = [3,4,5,1,2], B = [4,1] \u200b\u8f93\u51fa\u200b\uff1atrue</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a \u200b\u5148\u5e8f\u200b\u904d\u5386\u200b + \u200b\u5b50\u6811\u200b\u5224\u65ad\u200b <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSubStructure(TreeNode* A, TreeNode* B) {\n\n        if (B == nullptr || A == nullptr) {\n            return false;\n        }\n        bool flag = false;\n        if (A-&gt;val == B-&gt;val) {\n            flag = judge(A, B);\n        }\n\n        if (!flag) {\n            flag = isSubStructure(A-&gt;left, B);\n        }\n\n        if (!flag) {\n            flag = isSubStructure(A-&gt;right, B);\n        }\n        return flag;\n    }\n\n    bool judge(TreeNode* t1, TreeNode* t2) {\n        if (t1 == nullptr &amp;&amp; t2 == nullptr) {\n            return true;\n        }\n        if (t1 == nullptr &amp;&amp; t2 != nullptr) {\n            return false;\n        }\n        if (t1 != nullptr &amp;&amp; t2 == nullptr) {\n            return true;\n        }\n        if (t1-&gt;val != t2-&gt;val) {\n            return false;\n        }\n\n        return judge(t1-&gt;left, t2-&gt;left) &amp;&amp; judge(t1-&gt;right, t2-&gt;right);\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ27-%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"JZ27 \u200b\u7ffb\u8f6c\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u7ed9\u5b9a\u200b\u4e00\u68f5\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u6839\u200b\u8282\u70b9\u200b root\uff0c\u200b\u8bf7\u200b\u5de6\u53f3\u200b\u7ffb\u8f6c\u200b\u8fd9\u68f5\u200b\u4e8c\u53c9\u6811\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u5176\u6839\u200b\u8282\u70b9\u200b\u3002</p> <pre><code>class Solution {\npublic:\n    TreeNode* mirrorTree(TreeNode* root) {\n        if (root == nullptr) {\n            return root;\n        }\n\n        TreeNode* temp = root-&gt;left;\n        root-&gt;left = root-&gt;right;\n        root-&gt;right = temp;\n        mirrorTree(root-&gt;left);\n        mirrorTree(root-&gt;right);\n        return root;\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ28-%E5%88%A4%E6%96%AD%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"JZ28 \u200b\u5224\u65ad\u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u5224\u65ad\u200b\u5bf9\u79f0\u200b\u4e8c\u53c9\u6811\u200b </p> <pre><code>class Solution {\npublic:\n\n    bool judge(TreeNode* t1, TreeNode* t2) {\n        if (t1 == nullptr &amp;&amp; t2 == nullptr) {\n            return true;\n        }\n        if (t1 == nullptr || t2 == nullptr) {\n            return false;\n        }\n        if (t1-&gt;val != t2-&gt;val) {\n            return false;\n        }\n\n        return judge(t1-&gt;left, t2-&gt;right) &amp;&amp; judge(t1-&gt;right, t2-&gt;left);\n    }\n    bool checkSymmetricTree(TreeNode* root) {\n        if (root == nullptr) {\n            return true;\n        }\n\n        bool flag = judge(root, root);\n        return flag;\n\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ29-%20%E8%9E%BA%E6%97%8B%E9%81%8D%E5%8E%86%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/","title":"JZ29  \u200b\u87ba\u65cb\u200b\u904d\u5386\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4","text":"<p>\u200b\u87ba\u65cb\u200b\u904d\u5386\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u6a21\u62df\u200b * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(nm) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(1) <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; spiralArray(vector&lt;vector&lt;int&gt;&gt;&amp; array) {\n        vector&lt;int&gt; res;\n        if (array.size() == 0) {\n            return res;\n        }\n\n        int left = 0;\n        int right = array[0].size() - 1;\n        int top = 0;\n        int bottom = array.size() - 1;\n        while (left &lt;= right &amp;&amp; top &lt;= bottom) {\n            for (int i = left; i &lt;= right; ++i) {\n                res.push_back(array[top][i]);\n            }\n            for (int i = top + 1; i &lt;= bottom; ++i) {\n                res.push_back(array[i][right]);\n            }\n\n            if (top != bottom) {\n                for (int i = right - 1; i &gt;= left; --i) {\n                    res.push_back(array[bottom][i]);\n                }\n            }\n            if (left != right) {\n                for (int i = bottom - 1; i &gt; top; --i) {\n                    res.push_back(array[i][left]);\n                }\n            }\n            ++left; --right; ++top; --bottom;\n        }\n        return res;\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ30-%E6%9C%80%E5%B0%8F%E6%A0%88/","title":"JZ30 \u200b\u6700\u5c0f\u200b\u6808","text":"<p>\u200b\u6700\u5c0f\u200b\u6808\u200b</p> <p>\u200b\u8bf7\u200b\u4f60\u200b\u8bbe\u8ba1\u200b\u4e00\u4e2a\u200b \u200b\u6700\u5c0f\u200b\u6808\u200b \u3002\u200b\u5b83\u200b\u63d0\u4f9b\u200b push \uff0cpop \uff0ctop \u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u80fd\u200b\u5728\u200b\u5e38\u6570\u200b\u65f6\u95f4\u200b\u5185\u200b\u68c0\u7d22\u200b\u5230\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u7684\u200b\u6808\u200b\u3002</p> <p>\u200b\u5b9e\u73b0\u200b MinStack \u200b\u7c7b\u200b:</p> <p>MinStack() \u200b\u521d\u59cb\u5316\u200b\u5806\u6808\u200b\u5bf9\u8c61\u200b\u3002 void push(int val) \u200b\u5c06\u200b\u5143\u7d20\u200bval\u200b\u63a8\u5165\u200b\u5806\u6808\u200b\u3002 void pop() \u200b\u5220\u9664\u200b\u5806\u6808\u200b\u9876\u90e8\u200b\u7684\u200b\u5143\u7d20\u200b\u3002 int top() \u200b\u83b7\u53d6\u200b\u5806\u6808\u200b\u9876\u90e8\u200b\u7684\u200b\u5143\u7d20\u200b\u3002 int getMin() \u200b\u83b7\u53d6\u200b\u5806\u6808\u200b\u4e2d\u200b\u7684\u200b\u6700\u5c0f\u200b\u5143\u7d20\u200b\u3002</p> <pre><code>class MinStack {\npublic:\n    /** initialize your data structure here. */\n    stack&lt;int&gt; s1;\n    stack&lt;int&gt; s2;\n    MinStack() {\n    }\n\n    void push(int x) {\n        s1.push(x);\n        if (s2.size() == 0) {\n            s2.push(x);\n        } else {\n            int data = s2.top();\n            if (x &lt; data) {\n                s2.push(x);\n            } else {\n                s2.push(data);\n            }\n        }\n    }\n\n    void pop() {\n        s1.pop();\n        s2.pop();\n    }\n\n    int top() {\n        return s1.top();\n\n    }\n\n    int getMin() {\n        return s2.top();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj-&gt;push(x);\n * obj-&gt;pop();\n * int param_3 = obj-&gt;top();\n * int param_4 = obj-&gt;getMin();\n */\n</code></pre>"},{"location":"CodingInterviews/JZ31-%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E3%80%81%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/","title":"JZ31 \u200b\u6808\u200b\u7684\u200b\u538b\u5165\u200b\u3001\u200b\u5f39\u200b\u51fa\u200b\u5e8f\u5217","text":"<p>\u200b\u8f93\u5165\u200b\u4e24\u4e2a\u200b\u6574\u6570\u200b\u5e8f\u5217\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u5e8f\u5217\u200b\u8868\u793a\u200b\u6808\u200b\u7684\u200b\u538b\u5165\u200b\u987a\u5e8f\u200b\uff0c\u200b\u8bf7\u200b\u5224\u65ad\u200b\u7b2c\u4e8c\u4e2a\u200b\u5e8f\u5217\u200b\u662f\u5426\u200b\u53ef\u80fd\u200b\u4e3a\u200b\u8be5\u200b\u6808\u200b\u7684\u200b\u5f39\u51fa\u200b\u987a\u5e8f\u200b\u3002\u200b\u5047\u8bbe\u200b\u538b\u5165\u200b\u6808\u200b\u7684\u200b\u6240\u6709\u200b\u6570\u5b57\u200b\u5747\u200b\u4e0d\u200b\u76f8\u7b49\u200b\u3002\u200b\u4f8b\u5982\u200b\u5e8f\u5217\u200b1,2,3,4,5\u200b\u662f\u200b\u67d0\u6808\u200b\u7684\u200b\u538b\u5165\u200b\u987a\u5e8f\u200b\uff0c\u200b\u5e8f\u5217\u200b4,5,3,2,1\u200b\u662f\u200b\u8be5\u200b\u538b\u6808\u200b\u5e8f\u5217\u200b\u5bf9\u5e94\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5f39\u200b\u51fa\u200b\u5e8f\u5217\u200b\uff0c\u200b\u4f46\u200b4,3,5,1,2\u200b\u5c31\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u662f\u200b\u8be5\u200b\u538b\u6808\u200b\u5e8f\u5217\u200b\u7684\u200b\u5f39\u51fa\u200b\u5e8f\u5217\u200b\u3002</p> <p>\u200b\u8f93\u5165\u200b\uff1a [1,2,3,4,5],[4,5,3,2,1] \u200b\u8fd4\u56de\u503c\u200b\uff1a true</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u6a21\u62df\u200b\u6808\u200b\uff0c\u200b\u5224\u65ad\u200b\u6808\u200b\u662f\u5426\u200b\u7a7a\u200b\uff0c\u200b\u7a7a\u5219\u200b\u4ee3\u8868\u200b\u5339\u914d\u200b\uff0c\u200b\u5426\u5219\u200b\u4e0d\u200b\u5339\u914d\u200b * \u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200bo(n) * \u200b\u7a7a\u95f4\u200b\u590d\u6742\u5ea6\u200bo(n) <pre><code>class Solution {\npublic:\n    bool validateBookSequences(vector&lt;int&gt;&amp; putIn, vector&lt;int&gt;&amp; takeOut) {\n\n        stack&lt;int&gt; s1;\n        int index = 0;\n        for (auto&amp; push_item : putIn) {\n            s1.push(push_item);\n\n            while (!s1.empty()) {\n                if (s1.top() == takeOut[index]) {\n                    s1.pop();\n                    ++index;\n                } else {\n                    break;\n                }\n            }\n        }\n        return s1.empty();\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ32-%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"JZ32 \u200b\u4ece\u200b\u4e0a\u200b\u5f80\u200b\u4e0b\u200b\u6253\u5370\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u4e0d\u200b\u5206\u884c\u200b\u4ece\u200b\u4e0a\u200b\u5f80\u200b\u4e0b\u200b\u6253\u5370\u200b\u51fa\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u540c\u5c42\u200b\u8282\u70b9\u200b\u4ece\u200b\u5de6\u200b\u81f3\u200b\u53f3\u200b\u6253\u5370\u200b\u3002\u200b\u4f8b\u5982\u200b\u8f93\u5165\u200b{8,6,10,#,#,2,1}\uff0c\u200b\u5982\u200b\u4ee5\u4e0b\u200b\u56fe\u4e2d\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e8c\u53c9\u6811\u200b\uff0c\u200b\u5219\u200b\u4f9d\u6b21\u200b\u6253\u5370\u200b8,6,10,2,1(\u200b\u7a7a\u200b\u8282\u70b9\u200b\u4e0d\u200b\u6253\u5370\u200b\uff0c\u200b\u8df3\u8fc7\u200b)\uff0c\u200b\u8bf7\u200b\u4f60\u200b\u5c06\u200b\u6253\u5370\u200b\u7684\u200b\u7ed3\u679c\u200b\u5b58\u653e\u200b\u5230\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\u91cc\u9762\u200b\uff0c\u200b\u8fd4\u56de\u200b\u3002</p> <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector&lt;int&gt; decorateRecord(TreeNode* root) {\n        vector&lt;int&gt; res;\n        queue&lt;TreeNode*&gt; q;\n        if (root == nullptr) {\n            return res;\n        }\n\n        q.push(root);\n        while (q.size() != 0) {\n            TreeNode* temp = q.front();\n            q.pop();\n            res.push_back(temp-&gt;val);\n\n            if (temp-&gt;left != nullptr) {\n                q.push(temp-&gt;left);\n            }\n\n            if (temp-&gt;right != nullptr) {\n                q.push(temp-&gt;right);\n            }\n        }\n        return res;\n    }\n};\n\n// \u200b\u6309\u884c\u200b\u6253\u5370\u200b,\n// [\u200b\u5982\u679c\u200b\u662f\u200b\u5947\u6570\u200b\u884c\u4ece\u200b\u505a\u200b\u5de6\u5230\u200b\u53f3\u200b\uff0c\u200b\u5076\u6570\u200b\u884c\u200b\u4ece\u53f3\u5230\u5de6\u200b\uff0c\u200b\u8bbe\u7f6e\u200bindex\u200b\u5224\u65ad\u200b\u5947\u5076\u200b\u884c\u200b\uff0c\u200b\u8fdb\u884c\u200breverse(v.begin(), v.end());]\n// \u200b\u4ece\u200b\u5e95\u90e8\u200b\u5411\u4e0a\u200b\u5c42\u6b21\u200b\u904d\u5386\u200b\u5c31\u200b\u9700\u8981\u200b\u5c06\u200b\u6700\u200b\u5916\u5c42\u200b\u7684\u200bvector\u200b\u8fdb\u884c\u200b\u53cd\u8f6c\u200b\nclass Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; decorateRecord(TreeNode* root) {\n\n        vector&lt;vector&lt;int&gt;&gt; res;\n        queue&lt;TreeNode*&gt; q;\n        q.push(root);\n        if (root == nullptr) {\n            return res;\n        }\n\n        while (q.size() != 0) {\n            vector&lt;int&gt; v;\n            int len = q.size();\n\n            while (len &gt; 0) {\n                TreeNode* temp = q.front();\n                q.pop();\n                v.push_back(temp-&gt;val);\n\n                if (temp-&gt;left != nullptr) {\n                    q.push(temp-&gt;left);\n                } \n\n                if (temp-&gt;right != nullptr) {\n                    q.push(temp-&gt;right);\n                }\n                --len;\n\n            }\n            res.push_back(v);\n        }\n        return res;\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ33-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97/","title":"JZ33 \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u5e8f\u5217","text":"<p>\u200b\u8bf7\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u5224\u65ad\u200b\u6574\u6570\u200b\u6570\u7ec4\u200b postorder \u200b\u662f\u5426\u200b\u4e3a\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u7684\u200b\u540e\u5e8f\u200b\u904d\u5386\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a * \u200b\u641c\u7d22\u200b\u4e8c\u53c9\u6811\u200b\uff0c\u200b\u505a\u200b\u8282\u70b9\u200b\u5c0f\u4e8e\u200b\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u6839\u200b\u8282\u70b9\u200b\u5c0f\u4e8e\u200b\u53f3\u200b\u8282\u70b9\u200b * \u200b\u6700\u6709\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u662f\u200b\u6839\u200b\u8282\u70b9\u200b\uff0c\u200b\u5224\u65ad\u200b\u524d\u9762\u200b\u7684\u200b\u5e8f\u5217\u200b\u548c\u200b\u6839\u200b\u8282\u70b9\u200b\u7684\u200b\u5927\u5c0f\u200b\u5207\u5206\u200b\u5de6\u53f3\u200b\u5206\u652f\u200b</p> <pre><code>class Solution {\npublic:\n    bool verifyTreeOrder(vector&lt;int&gt;&amp; postorder) {\n\n        bool flag = check(postorder, 0, postorder.size() - 1);\n        return flag;\n\n    }\n\n    bool check(vector&lt;int&gt;&amp; postorder, int start, int end) {\n\n        if (start &gt;= end) {\n            return true;\n        }\n\n        int root_value = postorder[end];\n\n        int i;\n        for (i = start; i &lt; end; ++i) {\n            if (postorder[i] &gt; root_value) {\n                break;\n            }\n        }\n        int j = i;\n        for (; j &lt; end; ++j) {\n            if (postorder[j] &lt; root_value) {\n                return false;\n            }\n        }\n\n        bool left = true;\n        if (i &gt; 0) {\n            left = check(postorder, start, i - 1);\n        }\n        bool right = true;\n        if (i &lt; end) {\n            right = check(postorder, i, end - 1);\n        }\n        return left &amp;&amp; right;\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ34-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84%28%E4%BA%8C%29/","title":"JZ34 \u200b\u4e8c\u53c9\u6811\u200b\u4e2d\u200b\u548c\u200b\u4e3a\u200b\u67d0\u200b\u4e00\u503c\u200b\u7684\u200b\u8def\u5f84\u200b(\u200b\u4e8c\u200b)","text":"<p>\u200b\u7ed9\u200b\u4f60\u200b\u4e8c\u53c9\u6811\u200b\u7684\u200b\u6839\u200b\u8282\u70b9\u200b root \u200b\u548c\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u76ee\u6807\u200b\u548c\u200b targetSum \uff0c\u200b\u627e\u51fa\u200b\u6240\u6709\u200b \u200b\u4ece\u6839\u200b\u8282\u70b9\u200b\u5230\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b \u200b\u8def\u5f84\u200b\u603b\u548c\u200b\u7b49\u4e8e\u200b\u7ed9\u5b9a\u200b\u76ee\u6807\u200b\u548c\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</p> <p>\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b \u200b\u662f\u200b\u6307\u200b\u6ca1\u6709\u200b\u5b50\u200b\u8282\u70b9\u200b\u7684\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u6811\u200b\u7684\u200b\u524d\u200b\u5e8f\u5217\u200b\u904d\u5386\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f97\u5230\u200b\u6839\u5230\u200b\u53f6\u5b50\u200b\u8282\u70b9\u200b\u7684\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5982\u679c\u200b\u548c\u200b\u5339\u914d\u200b\u5219\u200b\u8bb0\u5f55\u200b\u8fd9\u4e2a\u200b\u5e8f\u5217\u200b\uff0c\u200b\u5426\u5219\u200b\u5c06\u200b\u5f53\u524d\u200b\u7684\u200b\u503c\u200b\u53bb\u9664\u200b\uff0c\u200b\u63a5\u7740\u200b\u904d\u5386\u200b <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; res;\n    vector&lt;int&gt; v;\n    vector&lt;vector&lt;int&gt;&gt; pathTarget(TreeNode* root, int target) {\n        if (root == nullptr) {\n            return res;\n        }\n        int val = root-&gt;val;\n        v.push_back(val);\n        target -= val;\n        if (root-&gt;left == nullptr &amp;&amp; root-&gt;right == nullptr &amp;&amp; target == 0) {\n            res.push_back(v);\n        }\n\n        pathTarget(root-&gt;left, target);\n        pathTarget(root-&gt;right, target);\n        v.pop_back();\n        return res;\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ35-%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6/","title":"JZ35 \u200b\u590d\u6742\u200b\u94fe\u8868\u200b\u7684\u200b\u590d\u5236","text":"<p>\u200b\u8bf7\u200b\u5b9e\u73b0\u200b copyRandomList \u200b\u51fd\u6570\u200b\uff0c\u200b\u590d\u5236\u200b\u4e00\u4e2a\u200b\u590d\u6742\u200b\u94fe\u8868\u200b\u3002\u200b\u5728\u200b\u590d\u6742\u200b\u94fe\u8868\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u9664\u4e86\u200b\u6709\u200b\u4e00\u4e2a\u200b next \u200b\u6307\u9488\u200b\u6307\u5411\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b random \u200b\u6307\u9488\u200b\u6307\u5411\u200b\u94fe\u8868\u200b\u4e2d\u200b\u7684\u200b\u4efb\u610f\u200b\u8282\u70b9\u200b\u6216\u8005\u200b null\u3002</p> <p>\u200b\u89e3\u6cd5\u200b\u89c1\u200b\u6ce8\u91ca\u200b</p> <pre><code>class Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        Node* p = head;\n        if (head == nullptr) {\n            return nullptr;\n        }\n\n        // 1 \u200b\u590d\u5236\u200b\u8282\u70b9\u200b\u5728\u200b\u539f\u59cb\u200b\u8282\u70b9\u200b\u540e\u200b\n        while (p != nullptr) {\n            Node* temp_node = new Node(p-&gt;val);\n            temp_node-&gt;next = p-&gt;next;\n            p-&gt;next = temp_node;\n            p = temp_node-&gt;next;\n        }\n\n        // 2 \u200b\u590d\u5236\u200brandom\u200b\u6307\u9488\u200b\n        p = head;\n        while (p != nullptr) {\n            Node* temp_node = p-&gt;next;\n            if (p-&gt;random == NULL) {\n                temp_node-&gt;random = NULL;\n            } else {\n                temp_node-&gt;random = p-&gt;random-&gt;next;\n            }\n            p = temp_node-&gt;next;\n        }\n\n        // 3 \u200b\u5c06\u200b\u94fe\u8868\u200b\u62c6\u5f00\u200b\n        p = head;\n        Node* read_head = p-&gt;next;\n        Node* read_node = read_head;\n        while (p != nullptr) {\n            p-&gt;next = read_node-&gt;next;\n            if (read_node-&gt;next != nullptr) {\n                read_node-&gt;next = read_node-&gt;next-&gt;next;\n            } else {\n                read_node-&gt;next = nullptr;\n            }\n            p = p-&gt;next;\n            read_node = read_node-&gt;next;\n        }\n\n        return read_head;\n    }\n};\n</code></pre>"},{"location":"CodingInterviews/JZ36-%E5%B0%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/","title":"JZ36 \u200b\u5c06\u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6392\u5e8f\u200b\u7684\u200b\u53cc\u5411\u200b\u94fe\u8868","text":"<p>\u200b\u5c06\u200b\u4e00\u4e2a\u200b \u200b\u4e8c\u53c9\u200b\u641c\u7d22\u200b\u6811\u200b \u200b\u5c31\u200b\u5730\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u4e00\u4e2a\u200b \u200b\u5df2\u200b\u6392\u5e8f\u200b\u7684\u200b\u53cc\u5411\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b \u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u53cc\u5411\u200b\u5faa\u73af\u200b\u5217\u8868\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5de6\u53f3\u200b\u5b69\u5b50\u200b\u6307\u9488\u200b\u4f5c\u4e3a\u200b\u53cc\u5411\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b\u7684\u200b\u524d\u9a71\u200b\u548c\u200b\u540e\u7ee7\u200b\u6307\u9488\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u524d\u9a71\u200b\u662f\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u540e\u7ee7\u200b\u662f\u200b\u7b2c\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u3002</p> <p>\u200b\u89e3\u6cd5\u200b\uff1a\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b,\u200b\u5c06\u200b\u4e2d\u5e8f\u200b\u904d\u5386\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u8fde\u63a5\u8d77\u6765\u200b <pre><code>class Solution {\npublic:\n    Node* read_head = nullptr;\n    Node* p = nullptr;\n\n    void change_tree(Node* root) {\n        if (root == nullptr) {\n            return;\n        }\n\n        treeToDoublyList(root-&gt;left);\n        if (read_head == nullptr) {\n            read_head = root;\n            p = root;\n        } else {\n            p-&gt;right = root;\n            root-&gt;left = p;\n            p = root;\n        }\n\n        treeToDoublyList(root-&gt;right);\n        return;\n    }\n\n    Node* treeToDoublyList(Node* root) {\n        change_tree(root);\n        if (read_head == nullptr) {\n            return nullptr;\n        }\n        p-&gt;right = read_head;\n        read_head-&gt;left = p;\n        return read_head;\n\n    }\n};\n</code></pre></p>"},{"location":"CodingInterviews/JZ37-%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"JZ37 \u200b\u5e8f\u5217\u5316\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\u4e8c\u53c9\u6811","text":"<p>\u200b\u5e8f\u5217\u5316\u200b\u4e0e\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\u4e8c\u53c9\u6811\u200b \u200b\u89e3\u6cd5\u200b\uff1a <pre><code>class Codec {\npublic:\n    // Encodes a tree to a single string.\n    string res = \"\";\n    void get_tree_string(TreeNode* root) {\n        if (root == nullptr) {\n            res += \"$,\";\n            return;\n        }\n        res += to_string(root-&gt;val);\n        res += ',';\n        get_tree_string(root-&gt;left);\n        get_tree_string(root-&gt;right);\n    }\n    string serialize(TreeNode* root) {\n        get_tree_string(root);\n        cout &lt;&lt; res;\n        return res;\n    }\n\n    // Decodes your encoded data to tree.\n    TreeNode* deserialize(string data) {\n        list&lt;string&gt; dataArray;\n        string str;\n        for (auto&amp; ch : data) {\n            if (ch == ',') {\n                dataArray.push_back(str);\n                str.clear();\n            } else {\n                str.push_back(ch);\n            }\n        }\n        if (!str.empty()) {\n            dataArray.push_back(str);\n            str.clear();\n        }\n        return rdeserialize(dataArray);\n    }\n\n    TreeNode* rdeserialize(list&lt;string&gt;&amp; dataArray) {\n        if (dataArray.front() == \"$\") {\n            dataArray.erase(dataArray.begin());\n            return nullptr;\n        }\n\n        TreeNode* root = new TreeNode(stoi(dataArray.front()));\n        dataArray.erase(dataArray.begin());\n        root-&gt;left = rdeserialize(dataArray);\n        root-&gt;right = rdeserialize(dataArray);\n        return root;\n    }\n\n};\n</code></pre></p>"}]}